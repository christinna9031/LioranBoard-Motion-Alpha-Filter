[extension_name]
Motion Alpha Filter
[insert_external]
<!--
 * @name: Motion Alpha Filter, @version: 1.0, @author: ChristinnaK
 * -->
<div><p>Motion Alpha Filter is installed</p></div>
<b>Status</b>: <span id="mediaendedeventsstatus"></span>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/obs-websocket-js@4.0.2/dist/obs-websocket.js"></script>
[insert_command]
lioranboardclient.send('{"type":"MESSAGE","topic":"ExtensionCommand","name":"Motion Alpha Filter INIT","boxcount":2,"boxname1":"obsws_port","boxtype1":"real","boxname2":"obsws_password","boxtype2":"string"}');  
lioranboardclient.send('{"type":"MESSAGE","topic":"ExtensionCommand","name":"Motion Alpha Filter","boxcount":5,"boxname1":"sourceName","boxtype1":"string","boxname2":"filterName","boxtype2":"string","boxname3":"start","boxtype3":"real","boxname4":"end","boxtype4":"real","boxname5":"duration","boxtype5":"real"}');  
[insert_hook]
case "MotionAlphaFilterINIT":{  
    motionAlphaInit (LioranBoardJSON.obsws_port, LioranBoardJSON.obsws_password)
    }break 
case "MotionAlphaFilter":{  
    MotionAlphaFilter (LioranBoardJSON.sourceName, LioranBoardJSON.filterName,  LioranBoardJSON.start,  LioranBoardJSON.end,  LioranBoardJSON.duration)
    }break   
[insert_script]
function motionAlphaInit(port, pw) {
  window.alphaFilterConnect = new OBSWebSocket();
  const obs = window.alphaFilterConnect;
  let obsTimeout;

  StartListening();

  function StartListening() {
    obs.connect({ address: `localhost:${port}`, password: pw })
      .catch((data) => {
        ChangeStatus(`Motion Alpha Filter Error: ${data.error}`);
        obs.disconnect();
      });

    obs.on('AuthenticationSuccess', () => {
      ChangeStatus('Motion Alpha Filter extension is connected.');
    });

    obs.on('ConnectionClosed', () => {
      ChangeStatus('Motion Alpha Filter: Connection closed. Attempting to reconnect in 10s.');
      try { clearTimeout(obsTimeout); } catch (e) {}
      obs.removeAllListeners();
      obsTimeout = setTimeout(() => {
        StartListening();
      }, 10000);
    });

    obs.on('error', (err) => {
      ChangeStatus(`Motion Alpha Filter Error: ${err}`);
      obs.disconnect();
    });
  }

  function ChangeStatus(msg) {
    lioranboardclient.send(`{"type":"MESSAGE","topic":"AlertMessage","message":"${msg}"}`);
  }
}

function MotionAlphaFilter(sourceName, filterName, start, end, duration) {
  const obs = window.alphaFilterConnect;
  let opacity = start;
  const increment = 10 * (end - start) / duration;
  const interval = setInterval(changeAlpha, 10);

  function changeAlpha() {
    if (parseInt(opacity) === end) { opacity = parseInt(opacity); clearInterval(interval); }
    obs.send('SetSourceFilterSettings', { sourceName, filterName, filterSettings: { opacity: opacity / 100 } })
      .catch((e) => {
        console.log(e)
        lioranboardclient.send(`{"type":"MESSAGE","topic":"AlertMessage","message":"'Motion Alpha Filter Error: ${e.error}"}`);
        clearInterval(interval);
      });
    opacity += increment;
  }
}
[insert_over]
[buttons_1x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+"
picture=""
text="MOTION # ALPHA"
color="12632256.000000"
button_id="ID188"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2=""
websocketvalue1_2="Bear in mind there's minimal error checking implemented, so make sure all your values are correct. "
websocketaction2="92.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1="1000"
websocketvalue5_1="0"
websocketvalue4_1="100"
websocketvalue3_1="Color Correction"
websocketvalue2_1=""
websocketvalue1_1="Motion Alpha Filter"
websocketaction1="71.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="This is the exact same as Motion Alpha Filter command."
websocketaction0="92.000000"
[buttons_0x0]
activepress="0.000000"
border_size="0.000000"
combine="0.000000"
type="websocketaction+pubsubaction+"
picture=""
text="INIT"
color="12632256.000000"
button_id="ID187"
extensiontrigger0="!transmitteralways"
pubsubaction0="7.000000"
pubsubqueue="0.000000"
websocketdelay2="0.000000"
websocketvalue8_2=""
websocketvalue7_2=""
websocketvalue6_2=""
websocketvalue5_2=""
websocketvalue4_2=""
websocketvalue3_2=""
websocketvalue2_2="4444"
websocketvalue1_2="Motion Alpha Filter INIT"
websocketaction2="71.000000"
websocketdelay1="0.000000"
websocketvalue8_1=""
websocketvalue7_1=""
websocketvalue6_1=""
websocketvalue5_1=""
websocketvalue4_1=""
websocketvalue3_1=""
websocketvalue2_1=""
websocketvalue1_1="Message 'Motion Alpha Filter extension is connected.' means it's connected and ready. "
websocketaction1="92.000000"
websocketdelay0="0.000000"
websocketvalue8_0=""
websocketvalue7_0=""
websocketvalue6_0=""
websocketvalue5_0=""
websocketvalue4_0=""
websocketvalue3_0=""
websocketvalue2_0=""
websocketvalue1_0="Initiates extension once Transmitter is connected. Do not press this button manually. "
websocketaction0="92.000000"
[configs]
name="Motion Alpha Filter"
background_color="8947848.000000"
grid_height="2.000000"
grid_width="2.000000"